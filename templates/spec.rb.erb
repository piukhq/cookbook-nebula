control 'cis-benchmark-1.1.1' do
  title 'Disable unused filesystems'
  desc 'Ensure that mounting of cramfs, freevxfs, jffs2, hfs, hfsplus and udf
        filesystems are disabled'
  impact 0.9

  %w(
    cramfs
    freevxfs
    jffs2
    hfs
    hfsplus
    udf
  ).each do |fs|
    describe command("modprobe -n -v #{fs}") do
      its(:stdout) {should match 'install /bin/true \n'}
    end
  end
end

control 'cis-benchmark-1.1.14-1.1.16' do
  title 'Ensure nodev, nosuid and noexec option set on /dev/shm'
  desc 'The nodevmount option specifies that the filesystem cannot contain
        special devices. The nosuidmount option specifies that the filesystem
        cannot contain setuid files.The noexecmount option specifies that the
        filesystem cannot contain executable binaries.'
  impact 0.9

  describe mount('/dev/shm') do
    its('options') {should include{
      nodev = true,
      nosuid = true,
      noexec = true
      }
    }
  end
end

control 'cis-benchmark-1.1.20' do
  title 'Ensure sticky bit is set on all world-writable directories'
  desc 'Setting the sticky bit on world writable directories prevents users
        from deleting or renaming files in that directory that are not owned by
        them.'
  impact 0.9

  describe command("df --local -P | awk {if (NR!=1) print $6'} | xargs -I '{}' \
find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) \
2>/dev/null") do
    its(:exit_status) {should eq 2}
  end
end

control 'cis-benchmark-1.1.21' do
  title 'Disable Automounting'
  desc 'autofs allows automatic mounting of devices, typically including
        CD/DVDs and USB drives.'
  impact 0.9

  describe systemd_service('autofs') do
    it {should_not be_enabled}
  end
end

control 'cis-benchmark-1.3.1' do
  title 'Ensure AIDE is installed'
  desc 'AIDE takes a snapshot of filesystem state including modification times,
        permissions, and file hashes which can then be used to compare against
        the current state of the filesystem to detect modifications to the
        system.'
  impact 0.9

  describe package('aide') do
    it {should be_installed}
  end
end

# TODO: fix 1.3.2
control 'cis-benchmark-1.3.2' do
  title 'Ensure filesystem integrity is regularily checked'
  desc 'Periodic checking of the filesystem integrity is needed to detect
        changes to the filesystem.'
  impact 0.9

  describe crontab('root') do
    its('commands') {should include '/usr/bin/aide --config /etc/aide/aide.conf --check'}
  end
end

control 'cis-benchmark-1.4.1' do
  title 'Ensure permissions on bootloader config are configured'
  desc 'The grub configuration file contains information on boot settings
        and passwords for unlocking boot options. The grub configuration is
        usually grub.cfg stored in /boot/grub.'
  impact 0.9

  describe file('/boot/grub/grub.cfg') do
    it {should be_owned_by 'root'}
  end
end

control 'cis-benchmark-1.5.1' do
  title 'Ensure core dumps are restricted'
  desc 'A core dump is the memory of an executable program. It is generally
        used to determine why a program aborted. It can also be used to glean
        confidential information from a core file. The system provides the
        ability to set a soft limit for core dumps, but this can be overridden
        by the user.'
  impact 0.9

  describe file('/etc/security/limits.conf') do
    its('content') {should match /\* hard core 0/}
  end
end

control 'cis-benchmark-1.5.2' do
  title 'Ensure XD/NX support is enabled'
  desc 'Recent processors in the x86 family support the ability to prevent code
        execution on a per memory page basis. Generically and on AMD processors,
        this ability is called No Execute(NX), while on Intel processors it is
        called Execute Disable(XD). This ability can help prevent exploitation
        of buffer overflow vulnerabilities and should be activated whenever
        possible. Extra steps must be taken to ensure that this protection is
        enabled, particularly on 32-bit x86 systems. Other processors, such as
        Itanium and POWER, have included such support since inception and the
        standard kernel for those platforms supports the feature.'
  impact 0.9

  describe command('dmesg | grep "NX (Execute Disable)"') do
    its('stdout') {should include 'NX (Execute Disable) protection: active'}
  end
end

control 'cis-benchmark-1.5.3' do
  title 'Ensure address space layout randomization (ASLR) is enabled'
  desc 'Address space layout randomization (ASLR) is an exploit mitigation
        technique which randomly arranges the address space of key data areas
        of a process.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /kernel.randomize_va_space = 2/}
  end
end

control 'cis-benchmark-1.5.4' do
  title 'Ensure prelink is disabled'
  desc 'prelinkis a program that modifies ELF shared libraries and ELF
        dynamically linked binaries in such a way that the time needed for the
        dynamic linker to perform relocations at startup significantly
        decreases.'
  impact 0.9

  describe package ('prelink') do
    it {should_not be_installed}
  end
end

control 'cis-benchmark-1.6.2.1' do
  title 'Ensure AppArmor is not disabled in bootloader configuration'
  desc 'Configure AppArmor to be enabled at boot time and verify that it has
        not been overwritten by the bootloader boot parameters.'
  impact 0.9

  describe file ('/etc/default/grub') do
    its('content') {should_not match /apparmor=0/}
  end
end

control 'cis-benchmark-1.6.2.2' do
  title 'Ensure all AppArmor profiles are enforcing'
  desc 'AppArmor profiles define what resources applications are
        able to access.'
  impact 0.9

  describe command ('apparmor_status') do
    its(:stdout) {should match '0 processes are in complain mode.
0 processes are unconfined but have a profile defined.'}
  end
end

control 'cis-benchmark-1.6.3' do
  title 'Ensure SELinux or AppArmor are installed'
  desc 'SELinux and AppArmor provide Mandatory Access Controls.'
  impact 0.9

  describe package ('apparmor') do
    it {should be_installed}
  end
end

control 'cis-benchmark-1.7.1.1' do
  title 'Ensure message of the day is configured properly'
  desc 'The contents of the /etc/motd file are displayed to users after login
        and function as a message of the day for authenticated users. Unix-based
        systems have typically displayed information about the OS release and
        patch level upon logging in to the system. This information can be
        useful to developers who are developing software for a particular OS
        platform. If mingetty(8) supports the following options, they display
        operating system information: \m - machine architecture \r - operating
        system release \s - operating system name \v - operating system version'
  impact 0.9

  %w(
    10-help-text
    51-cloudguest
    90-updates-available
    91-release-upgrade
  ).each do |motd|
    describe file ('/etc/update-motd.d/#{motd}') do
      it {should_not exist}
    end
  end
end

control 'cis-benchmark-1.7.1.2-1.7.1.3' do
  title 'Ensure local login warning banner is configured properly'
  desc 'The contents of the /etc/issue file are displayed to users prior to
        login for local terminals. Unix-based systems have typically displayed
        information about the OS release and patch level upon logging in to the
        system. This information can be useful to developers who are developing
        software for a particular OS platform. If mingetty(8) supports the
        following options, they display operating system information: \m -
        machine architecture \r - operating system release \s - operating system
        name \v - operating system version'
  impact 0.9

  describe file('/etc/update-motd.d/11-disclaimer') do
    it {should exist}
  end
end

control 'cis-benchmark-1.7.1.5' do
  title 'Ensure permissions on /etc/issue are configured'
  desc 'The contents of the /etc/issue file are displayed to users prior to
        login for local terminals.'
  impact 0.9

  describe file('/etc/issue') do
    its('uid') {should eq 0}
    its('gid') {should eq 0}
    its('mode') { should cmp '0644'}
  end
end

control 'cis-benchmark-1.7.1.6' do
  title 'Ensure permissions on /etc/issue.net are configured'
  desc 'The contents of the /etc/issue.net file are displayed to users prior to
        login for remote connections from configured services.'
  impact 0.9

  describe file('/etc/issue.net') do
    its('uid') {should eq 0}
    its('gid') {should eq 0}
    its('mode') { should cmp '0644'}
  end
end

control 'cis-benchmark-2.1.1-2.1.5' do
  title 'inetd Services'
  desc 'Ensure chargen, daytime, discard, echo and time services are not
        enabled'
  impact 0.9

  files = ['/etc/inetd.conf', '/etc/inetd.d',
           '/etc/xinetd.conf', '/etc/xinetd.d/']
  for f in files do
    describe file(f) do
      it {should_not exist}
    end
  end
end

control 'cis-benchmark-2.1.6-2.1.9' do
  title 'inetd Servers'
  desc 'Ensure rsh, talk, telnet and tftp servers are not enabled'
  impact 0.9

  %w(
    /etc/inetd.conf
    /etc/inetd.d
    /etc/xinetd.conf
    /etc/xinetd.d/
  ).each do |f|
    describe file(f) do
      it {should_not exist}
    end
  end
end

control 'cis-benchmark-2.1.10' do
  title 'Ensure xinetd is not enabled'
  desc 'The eXtended InterNET Daemon (xinetd) is an open source super daemon
        that replaced the original inetd daemon. The xinetd daemon listens for
        well known services and dispatches the appropriate daemon to properly
        respond to service requests.'
  impact 0.9

  describe systemd_service('xinetd') do
    it {should_not be_enabled}
  end
end

control 'cis-benchmark-2.1.11' do
  title 'Ensure openbsd-inetd is not installed'
  desc 'The inetd daemon listens for well known services and dispatches the
        appropriate daemon to properly respond to service requests.'
  impact 0.9

  describe package('openbsd-inetd') do
    it {should_not be_installed}
  end
end

control 'cis-benchmark-2.2.1.1' do
  title 'Ensure time synchronization is in use'
  desc 'System time should be synchronized between all systems in an
        environment. This is typically done by establishing an authoritative
        time server or set of servers and having all systems synchronize their
        clocks to them.'
  impact 0.9

  describe package('chrony') do
    it {should be_installed}
  end
end

control 'cis-benchmark-2.2.1.3' do
  title 'Ensure chrony is configured'
  desc 'chrony is a daemon which implements the Network Time Protocol(NTP) is
        designed to synchronize system clocks across a variety of systems and
        use a source that is highly accurate.'
  impact 0.9

  describe file('/etc/chrony/chrony.conf') do
    its('content') {should include 'pool ntp.ubuntu.com'}
  end
end

control 'cis-benchmark-2.2.2' do
  title 'Ensure X Window System is not installed'
  desc 'The X Window System provides a Graphical User Interface (GUI) where
        users can have multiple windows in which to run programs and various add
        on. The X Windows system is typically used on workstations where users
        login, but not on servers where users typically do not login.'
  impact 0.9

  describe package('xserver-xorg') do
    it {should_not be_installed}
  end
end

control 'cis-benchmark-2.2.3-2.2.14' do
  title 'Ensure special purpose services are not enabled'
  desc 'Ensure Avahi Server, CUPS, DHCP Server, LDAP Server, NFS, RPC, DNS
        Server, FTP Server, HTTP Server, IMAP Server, POP3 Server, Samba, HTTP
        Proxy Server and SNMP Server are not enabled'
  impact 0.9

  %w(avahi-daemon
    cups
    isc-dhcp-server
    isc-dhcp-server6
    slapd
    nfs-server
    rpcbind
    bind9
    vsftpd
    apache2
    dovecot
    smbd
    squid
    snmpd
  ).each do |s|
    describe systemd_service(s) do
      it {should_not be_enabled}
    end
  end
end

control 'cis-benchmark-2.2.15-2.2.17' do
  title 'Ensure special purpose services are not enabled'
  desc 'Ensure postfix, rsync and NIS Server are not enabled'
  impact 0.9

  %w(
    postfix
    rsync
    nis
  ).each do |s|
    describe systemd_service(s) do
      it {should_not be_enabled}
    end
  end
end

control 'cis-benchmark-2.3.1-2.3.5' do
  title 'Ensure service clients are not installed'
  desc 'Ensure NIS, rsh, talk, telnet and LDAP are not installed'
  impact 0.9

  %w(
    nis
    rsh-client
    rsh-redone-client
    talk
    telnet
    ldap-utils
  ).each do |p|
    describe package(p) do
      it {should_not be_installed}
    end
  end
end

control 'cis-benchmark-3.1.2' do
  title 'Ensure packet redirect sending is disabled'
  desc 'ICMP Redirects are used to send routing information to other hosts. As
        a host itself does not act as a router (in a host only configuration),
        there is no need to send redirects.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.conf.all.send_redirects = 0/}
    its('content') {should match /net.ipv4.conf.default.send_redirects = 0/}
  end
end

control 'cis-benchmark-3.2.1' do
  title 'Ensure source routed packets are not accepted'
  desc 'In networking, source routing allows a sender to partially or fully
        specify the route packets take through a network. In contrast,
        non-source routed packets travel a path determined by routers in the
        network. In some cases, systems may not be routable or reachable from
        some locations (e.g. private addresses vs. Internet routable), and so
        source routed packets would need to be used.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.conf.all.accept_source_route = 0/}
    its('content') {should match /net.ipv4.conf.default.accept_source_route = 0/}
  end
end

control 'cis-benchmark-3.2.2' do
  title 'Ensure ICMP redirects are not accepted'
  desc "ICMP redirect messages are packets that convey routing information and
        tell your host (acting as a router) to send packets via an alternate
        path. It is a way of allowing an outside routing device to update your
        system routing tables. By setting net.ipv4.conf.all.accept_redirects to
        0, the system will not accept any ICMP redirect messages, and therefore,
        won't allow outsiders to update the system's routing tables."
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.conf.all.accept_redirects = 0/}
    its('content') {should match /net.ipv4.conf.default.accept_redirects = 0/}
  end
end

control 'cis-benchmark-3.2.3' do
  title 'Ensure secure ICMP redirects are not accepted'
  desc 'Secure ICMP redirects are the same as ICMP redirects, except they come
        from gateways listed on the default gateway list. It is assumed that
        these gateways are known to your system, and that they are likely to
        be secure.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.conf.all.secure_redirects = 0/}
    its('content') {should match /net.ipv4.conf.default.secure_redirects = 0/}
  end
end

control 'cis-benchmark-3.2.5' do
  title 'Ensure broadcast ICMP requests are ignored'
  desc 'Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system
        to ignore all ICMP echo and timestamp requests to broadcast and
        multicast addresses.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.icmp_echo_ignore_broadcasts = 1/}
  end
end

control 'cis-benchmark-3.2.6' do
  title 'Ensure bogus ICMP responses are ignored'
  desc 'Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from
        logging bogus responses (RFC-1122 non-compliant) from broadcast
        reframes, keeping file systems from filling up with useless log
        messages.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.icmp_ignore_bogus_error_responses = 1/}
  end
end

control 'cis-benchmark-3.2.7' do
  title 'Ensure Reverse Path Filtering is enabled'
  desc 'Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter
        to 1 forces the Linux kernel to utilize reverse path filtering on a
        received packet to determine if the packet was valid. Essentially, with
        reverse path filtering, if the return packet does not go out the same
        interface that the corresponding source packet came from, the packet is
        dropped (and logged if log_martians is set).'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.conf.all.rp_filter = 1/}
    its('content') {should match /net.ipv4.conf.default.rp_filter = 1/}
  end
end

control 'cis-benchmark-3.2.8' do
  title 'Ensure TCP SYN Cookies is enabled'
  desc 'When tcp_syncookies is set, the kernel will handle TCP SYN packets
        normally until the half-open connection queue is full, at which time,
        the SYN cookie functionality kicks in. SYN cookies work by not using
        the SYN queue at all. Instead, the kernel simply replies to the SYN with
        a SYN|ACK, but will include a specially crafted TCP sequence number that
        encodes the source and destination IP address and port number and the
        time the packet was sent. A legitimate connection would send the ACK
        packet of the three way handshake with the specially crafted sequence
        number. This allows the system to verify that it has received a valid
        response to a SYN cookie and allow the connection, even though there is
        no corresponding SYN in the queue.'
  impact 0.9

  describe file('/etc/sysctl.conf') do
    its('content') {should match /net.ipv4.tcp_syncookies = 1/}
  end
end

control 'cis-benchmark-3.5.1-3.5.4' do
  title 'Ensure uncommon network protocols are disabled'
  desc 'Ensure DCCP, SCTP, RDS and TIPC are disabled'
  impact 0.9

  %w(
    dccp
    sctp
    rds
    tipc
  ).each do |s|
    describe command("modprobe -n -v #{s}") do
      its(:stdout) {should match 'install /bin/true \n'}
    end
  end
end

control 'cis-benchmark-3.6.1' do
  title 'Ensure iptables is installed'
  desc 'iptables allows configuration of the IPv4 tables in the linux kernel and
        the rules stored within them. Most firewall configuration utilities
        operate as a front end to iptables.'
  impact 0.9

  describe package('iptables') do
    it {should be_installed}
  end
end

control 'cis-benchmark-4.1.2' do
  title 'Ensure auditd service is enabled'
  desc 'Turn on the auditd daemon to record system events.'
  impact 0.9

  describe systemd_service('auditd') do
    it {should be_enabled}
  end
end

control 'cis-benchmark-4.1.3' do
  title 'Ensure auditing for processes that start prior to auditd is enabled'
  desc 'Configure grub so that processes that are capable of being audited can
        be audited even if they start up prior to auditd startup.'
  impact 0.9

  describe file('/etc/default/grub') do
    its('content') {should match /audit=1/}
  end
end

# TODO: 4.1.12

control 'cis-benchmark-4.1.4-4.1.18' do
  title 'Ensure /etc/audit/audit.rules is configured correctly'
  desc 'Ensure /etc/audit/audit.rules is configured according to Benchmarks
        4.1.4 through to 4.1.18'
  impact 0.9

  describe file('/etc/audit/audit.rules') do
    its('content') {should match /-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change/}
    its('content') {should match /-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change/}
    its('content') {should match /-a always,exit -F arch=b64 -S clock_settime -k time-change/}
    its('content') {should match /-a always,exit -F arch=b32 -S clock_settime -k time-change/}
    its('content') {should match /-w \/etc\/localtime -p wa -k time-change/}
    its('content') {should match /-w \/etc\/group -p wa -k identity/}
    its('content') {should match /-w \/etc\/passwd -p wa -k identity/}
    its('content') {should match /-w \/etc\/gshadow -p wa -k identity/}
    its('content') {should match /-w \/etc\/shadow -p wa -k identity/}
    its('content') {should match /-w \/etc\/security\/opasswd -p wa -k identity/}
    its('content') {should match /-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale/}
    its('content') {should match /-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale/}
    its('content') {should match /-w \/etc\/issue -p wa -k system-locale/}
    its('content') {should match /-w \/etc\/issue.net -p wa -k system-locale/}
    its('content') {should match /-w \/etc\/hosts -p wa -k system-locale/}
    its('content') {should match /-w \/etc\/apparmor\/ -p wa -k MAC-policy/}
    its('content') {should match /-w \/etc\/apparmor.d\/ -p wa -k MAC-policy/}
    its('content') {should match /-w \/var\/log\/faillog -p wa -k logins/}
    its('content') {should match /-w \/var\/log\/lastlog -p wa -k logins/}
    its('content') {should match /-w \/var\/log\/tallylog -p wa -k logins/}
    its('content') {should match /-w \/var\/run\/utmp -p wa -k session/}
    its('content') {should match /-w \/var\/log\/wtmp -p wa -k logins/}
    its('content') {should match /-w \/var\/log\/btmp -p wa -k logins/}
    its('content') {should match /-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod/}
    its('content') {should match /-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access/}
    its('content') {should match /-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access/}
    its('content') {should match /-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access/}
    its('content') {should match /-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access/}
    its('content') {should match /-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts/}
    its('content') {should match /-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts/}
    its('content') {should match /-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete/}
    its('content') {should match /-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete/}
    its('content') {should match /-w \/etc\/sudoers -p wa -k scope/}
    its('content') {should match /-w \/etc\/sudoers.d\/ -p wa -k scope/}
    its('content') {should match /-w \/var\/log\/sudo.log -p wa -k actions/}
    its('content') {should match /-w \/sbin\/insmod -p x -k modules/}
    its('content') {should match /-w \/sbin\/rmmod -p x -k modules/}
    its('content') {should match /-w \/sbin\/modprobe -p x -k modules/}
    its('content') {should match /-a always,exit -F arch=b64 -S init_module -S delete_module -k modules/}
    its('content') {should match /-e 2/}
  end
end

control 'cis-benchmark-4.2.1.1' do
  title 'Ensure rsyslog Service is enabled'
  desc 'Once the rsyslog package is installed it needs to be activated.'
  impact 0.9

  describe systemd_service('rsyslog') do
    it {should be_enabled}
  end
end

control 'cis-benchmark-4.2.1.2-4.2.1.4' do
  title 'Ensure rsyslog file is configured correctly'
  desc 'Ensure rsyslog file is configured according Benchmarks 4.2.1.2 and
        4.2.1.4'
  impact 0.9

  describe file('/etc/rsyslog.d/99-graylog.conf') do
    it {should exist}
  end
end

control 'cis-benchmark-4.2.1.3' do
  title 'Ensure rsyslog default file permissions configured'
  desc 'rsyslog will create logfiles that do not already exist on the system.
        This setting controls what permissions will be applied to these newly
        created files.'
  impact 0.9

  describe file('/etc/rsyslog.conf') do
    its('content') {should match /\$FileCreateMode 0640/}
  end
end

control 'cis-benchmark-5.1.1' do
  title 'Ensure cron daemon is enabled'
  desc 'The cron daemon is used to execute batch jobs on the system.'
  impact 0.9

  describe package('cron') do
    it {should be_installed}
  end
end

control 'cis-benchmark-5.1.2' do
  title 'Ensure permissions on /etc/crontab are configured'
  desc 'The /etc/crontabfile is used by cronto control its own jobs. The
        commands in this item make sure that root is the user and group owner of
        the file and that only the owner can access the file.'
  impact 0.9

  describe file('/etc/crontab') do
    its('uid') {should eq 0}
    its('gid') {should eq 0}
    its('mode') {should cmp '0600'}
  end
end

control 'cis-benchmark-5.1.3-5.1.7' do
  title 'Ensure permissions are configured'
  desc 'Ensure permissions for /etc/cron.hourly, /etc/cron.daily,
        /etc/cron.weekly, /etc/cron.monthly and /etc/cron.d are configured'
  impact 0.9

  %w(
    /etc/cron.hourly
    /etc/cron.daily
    /etc/cron.weekly
    /etc/cron.monthly
    /etc/cron.d
  ).each do |f|
    describe file(f) do
      its('uid') {should eq 0}
      its('gid') {should eq 0}
      its('mode') { should cmp '0700'}
    end
  end
end

control 'cis-benchmark-5.1.8' do
  title 'Ensure at/cron is restricted to authorized users'
  desc 'Configure /etc/cron.allow and /etc/at.allow to allow specific users to
        use these services. If /etc/cron.allow or /etc/at.allow do not exist,
        then /etc/at.deny and /etc/cron.deny are checked. Any user not
        specifically defined in those files is allowed to use at and cron. By
        removing the files, only users in /etc/cron.allow and /etc/at.allow are
        allowed to use at and cron. Note that even though a given user is not
        listed in cron.allow, cron jobs can still be run as that user. The
        cron.allow file only controls administrative access to the crontab
        command for scheduling and modifying cron jobs.'

  %w(
    /etc/cron.deny
    /etc/at.deny
  ).each do |f|
    describe file(f) do
      it {should_not exist}
    end
  end
end

control 'cis-benchmark-5.1.8' do
  title 'Ensure at/cron is restricted to authorized users'
  desc 'Configure /etc/cron.allow and /etc/at.allow to allow specific users to
        use these services. If /etc/cron.allow or /etc/at.allow do not exist,
        then /etc/at.deny and /etc/cron.deny are checked. Any user not
        specifically defined in those files is allowed to use at and cron. By
        removing the files, only users in /etc/cron.allow and /etc/at.allow are
        allowed to use at and cron. Note that even though a given user is not
        listed in cron.allow, cron jobs can still be run as that user. The
        cron.allow file only controls administrative access to the crontab
        command for scheduling and modifying cron jobs.'

  %w(
    /etc/cron.allow
    /etc/at.allow
  ).each do |f|
    describe file(f) do
      it {should exist}
      its('uid') {should eq 0}
      its('gid') {should eq 0}
      its('mode') { should cmp '0600'}
    end
  end
end

control 'cis-benchmark-5.2.1' do
  title 'Ensure permissions on /etc/ssh/sshd_config are configured'
  desc 'The /etc/ssh/sshd_config file contains configuration specifications for
        sshd. The command below sets the owner and group of the file to root.'

  describe file('/etc/ssh/sshd_config') do
    its('uid') {should eq 0}
    its('gid') {should eq 0}
    its('mode') { should cmp '0600'}
  end
end

control 'cis-benchmark-5.2.2-5.2.15' do
  title 'Ensure SSH Server is configured'
  desc 'Ensure SSH Server is configured correctly'

  describe sshd_config do
    its('Protocol') {should eq '2'}
    its('LogLevel') {should eq 'INFO'}
    its('X11Forwarding') {should eq 'no'}
    its('MaxAuthTries') {should eq '4'}
    its('IgnoreRhosts') {should eq 'yes'}
    its('HostbasedAuthentication') {should eq 'no'}
    its('PermitRootLogin') {should include 'no'}
    its('PermitEmptyPasswords') {should eq 'no'}
    its('PermitUserEnvironment') {should eq 'no'}
    its('ClientAliveInterval') {should eq '300'}
    its('ClientAliveCountMax') {should eq '0'}
    its('LoginGraceTime') {should eq '60'}
    its('Banner') {should eq '/etc/issue.net'}
  end
end

control 'cis-benchmark-5.4.3' do
  title 'Ensure default group for the root account is GID 0'
  desc 'The usermod command can be used to specify which group the root user
        belongs to. This affects permissions of files that are created by the
        root user.'

  describe user('root') do
    its('gid') {should eq 0}
  end
end

control 'cis-benchmark-5.4.4' do
  title 'Ensure default user umask is 027 or more restrictive'
  desc 'The default umask determines the permissions of files created by users.
        The user creating the file has the discretion of making their files and
        directories readable by others via the chmod command. Users who wish to
        allow their files and directories to be readable by others by default
        may choose a different default umask by inserting the umask command into
        the standard shell configuration files (.profile, .bashrc, etc.) in
        their home directories.'

  describe user('root') do
    its('gid') {should eq 0}
  end
end

control 'cis-benchmark-5.6' do
  title 'Ensure access to the su command is restricted'
  desc 'The su command allows a user to run a command or shell as another user.
        The program has been superseded by sudo, which allows for more granular
        control over privileged access. Normally, the su command can be executed
        by any user. By uncommenting the pam_wheel.so statement in
        /etc/pam.d/su, the su command will only allow users in the wheel group
        to execute su.'

  describe file('/etc/pam.d/su') do
    its('content') {should match /auth required pam_wheel.so/}
  end
end

control 'cis-benchmark-6.1.2-6.1.9' do
  title 'Ensure permissions are configured'
  desc 'Ensure permissions for /etc/passwd and /etc/group are configured'
  impact 0.9

  %w(
    /etc/passwd
    /etc/group
    /etc/passwd-
    /etc/group-
  ).each do |f|
    describe file(f) do
      its('mode') { should cmp '0644'}
    end
  end

  %w(
    /etc/shadow
    /etc/gshadow
    /etc/shadow-
    /etc/gshadow-
  ).each do |f|
    describe file(f) do
      its('mode') { should cmp '0640'}
    end
  end
end

control 'cis-benchmark-6.1.10' do
  title 'Ensure no world writable files exist'
  desc 'Unix-based systems support variable settings to control access to files.
        World writable files are the least secure. See the chmod(2) man page for
        more information.'
  impact 0.9

  describe command("df --local -P | awk {'if (NR!=1) print $6'} | xargs -I \
'{}' find '{}' -xdev -type f -perm -0002 | grep -v \".kube/http-cache\"") do
    its(:stdout) {should eq ""}
  end
end

control 'cis-benchmark-6.1.11' do
  title 'Ensure no unowned files or directories exist'
  desc 'Sometimes when administrators delete users from the password file they
        neglect to remove all files owned by those users from the system.'
  impact 0.9

  describe command("df --local -P | awk {'if (NR!=1) print $6'} | xargs -I \
'{}' find '{}' -xdev -nouser") do
    its(:stdout) {should eq ""}
  end
end

control 'cis-benchmark-6.1.12' do
  title 'Ensure no ungrouped files or directories exist'
  desc 'Sometimes when administrators delete users or groups from the system
        they neglect to remove all files owned by those users or groups.'
  impact 0.9

  describe command("df --local -P | awk {'if (NR!=1) print $6'} | xargs -I \
'{}' find '{}' -xdev -nogroup") do
    its(:stdout) {should eq ""}
  end
end

control 'cis-benchmark-6.2.2-6.2.4' do
  title 'Ensure no legacy "+" entries exist'
  desc 'The character + in various files used to be markers for systems to
        insert data from NIS maps at a certain point in a system configuration
        file. These entries are no longer required on most systems, but may
        exist in files that have been imported from other platforms.'
  impact 0.9

  %w(
    /etc/passwd
    /etc/shadow
    /etc/group
  ).each do |f|
    describe file(f) do
      its('content') {should_not match /\+/}
    end
  end
end

control 'cis-benchmark-6.2.20' do
  title 'Ensure shadow group is empty'
  desc 'The shadow group allows system programs which require access the ability
        to read the /etc/shadow file. No users should be assigned to the shadow
        group.'
  impact 0.9

  describe users.where(groupname: shadow) do
    it {should_not exist}
  end
end
